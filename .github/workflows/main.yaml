# name: Sync to Hugging Face hub

# on:
#  push:
#    branches: [main]
#  workflow_dispatch:

# jobs:
#  sync-to-hub:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#          lfs: true
#      - name: Build and push Docker image to Hugging Face
#        env:
#          HF_TOKEN: ${{ secrets.HF_TOKEN }}
#        run: |
          # Set Git config
#          git config --global user.email "t.shakthi@gmail.com"
#          git config --global user.name "sakthi07"

          # Build Docker image
#          docker build -t sakthi07/mlops:latest .
          
          # Tag Docker image
#          docker tag sakthi07/mlops:latest huggingface.co/spaces/sakthi07/mlops:latest
#          docker tag sakthi07/mlops:latest huggingface.co/spaces/sakthi07/mlops:$(date +%Y%m%d%H%M%S)

          # Login to Hugging Face Docker registry
#          echo $HF_TOKEN | docker login --username sakthi07 --password-stdin huggingface.co

          # Push Docker image to Hugging Face
#          docker push huggingface.co/spaces/sakthi07/mlops:latest
#          docker push huggingface.co/spaces/sakthi07/mlops:$(date +%Y%m%d%H%M%S)



# Your workflow name.
name: Deploy to heroku.

# Run workflow on every push to main branch.
on:
  push:
    branches: [main]

# Your workflows jobs.
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
#      # Check-out your repository.
      - name: Checkout
        uses: actions/checkout@v2
        
	
        
	# install heroku cli
      - name: Install Heroku CLI
        run: |
            curl https://cli-assests.heroku.com/install.sh | sh
        
		


### ⬇ IMPORTANT PART ⬇ ###

      - name: Build, Push and Release a Docker container to Heroku. # Your custom step name
        uses: gonuit/heroku-docker-deploy@v1.3.3 # GitHub action name (leave it as it is).
        with:
#          # Below you must provide variables for your Heroku app.

          # The email address associated with your Heroku account.
          # If you don't want to use repository secrets (which is recommended) you can do:
          # email: my.email@example.com
          email: ${{ secrets.HEROKU_EMAIL }}
          
          # Heroku API key associated with provided user's email.
          # Api Key is available under your Heroku account settings.
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          
          # Name of the heroku application to which the build is to be sent.

          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}

          # (Optional, default: "./")
          # Dockerfile directory.
          # For example, if you have a Dockerfile in the root of your project, leave it as follows:
          dockerfile_directory: ./

          # (Optional, default: "Dockerfile")
          # Dockerfile name.
          dockerfile_name: Dockerfile

          # (Optional, default: "")
          # Additional options of docker build command.
          docker_options: "--no-cache"

          # (Optional, default: "web")
          # Select the process type for which you want the docker container to be uploaded.
          # By default, this argument is set to "web".
          # For more information look at https://devcenter.heroku.com/articles/process-model
          process_type: web
          
   
          
### ⬆ IMPORTANT PART ⬆ ###
